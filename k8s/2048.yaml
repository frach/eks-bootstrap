apiVersion: v1
kind: Namespace
metadata:
  name: game-2048
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: game-2048
  name: deployment-2048
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: app-2048
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app-2048
    spec:
      containers:
      - image: public.ecr.aws/l6m2t8p7/docker-2048:latest
        # UNCOMMENT WHEN ADDING EFS
        volumeMounts:
          - mountPath: /opt/persistent
            name: efs-volume
        imagePullPolicy: Always
        name: app-2048
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: 512M
          limits:
            memory: 1024M
      # UNCOMMENT WHEN ADDING EFS
      volumes:
      - name: efs-volume
        persistentVolumeClaim:
          claimName: efs-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: efs-claim
  namespace: game-2048
spec:
  storageClassName: efs-main-sc
  accessModes:
    - ReadWriteMany
  volumeName: efs-main-pv
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  namespace: game-2048
  name: service-2048
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  type: NodePort
  selector:
    app.kubernetes.io/name: app-2048
# UNCOMMENT WHEN ADDING LOADBALANCER
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: game-2048
  name: ingress-2048
  annotations:
    alb.ingress.kubernetes.io/load-balancer-name: eks-bootstrap-load-balancer
    alb.ingress.kubernetes.io/tags: createdBy=aws-load-balancer-controller,env=development
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    # UNCOMMENT WHEN ADDING DNS
    external-dns.alpha.kubernetes.io/hostname: game2048.aws.rachwalak.net
    # UNCOMMENT WHEN ADDING SSL
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:eu-west-1:819635879526:certificate/a170689b-0efd-4514-911b-b4b96ed05150
spec:
  ingressClassName: alb
  rules:
    # UNCOMMENT WHEN ADDING SSL
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ssl-redirect
                port:
                  name: use-annotation
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: service-2048
                port:
                  number: 80
